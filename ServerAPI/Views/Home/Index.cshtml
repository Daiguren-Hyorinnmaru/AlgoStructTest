@model ServerAPI.Models.IndexModel

<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Темний стиль з вкладками</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #121212;
            color: #ffffff;
        }

        .tab-content {
            margin-top: 20px;
        }

        .sidebar {
            background-color: #1e1e1e;
            padding: 15px;
            border-radius: 8px;
        }

        .chart-container {
            background-color: #1e1e1e;
            padding: 20px;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <form id="chartForm">
        @Html.AntiForgeryToken()
    </form>
    <div class="container mt-4">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="tab1-tab" data-bs-toggle="tab" data-bs-target="#tab1" type="button" role="tab" aria-controls="tab1" aria-selected="true">Вкладка 1</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="tab2-tab" data-bs-toggle="tab" data-bs-target="#tab2" type="button" role="tab" aria-controls="tab2" aria-selected="false">Вкладка 2</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <!-- Вкладка 1 -->
            <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="tab1-tab">
                <div class="row">
                    <div class="col-md-4 sidebar">
                        <h5>Параметри</h5>
                        <button id="updateChart1" class="btn btn-primary mb-3">Перебудувати графік</button>
                        <div>
                            <label class="form-label mt-3">Параметр 1:</label>
                            @if (Model.Sort.AlgorithmType?.Any() == true)
                            {
                                @foreach (var option in Model.Sort.AlgorithmType)
                                {
                                    <div>
                                        <input type="checkbox" id="param1-@option" name="AlgorithmType" class="form-check-input" value="@option">
                                        <label for="param1-@option" class="form-check-label">@option</label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>Немає доступних варіантів для параметра 1.</p>
                            }
                        </div>
                        <div>
                            <label class="form-label mt-3">Параметр 2:</label>
                            @if (Model.Sort.CollectionType?.Any() == true)
                            {
                                @foreach (var option in Model.Sort.CollectionType)
                                {
                                    <div>
                                        <input type="checkbox" id="param2-@option" name="CollectionType" class="form-check-input" value="@option">
                                        <label for="param2-@option" class="form-check-label">@option</label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>Немає доступних варіантів для параметра 2.</p>
                            }
                        </div>
                        <div>
                            <label class="form-label mt-3">Параметр 3:</label>
                            @if (Model.Sort.DataType?.Any() == true)
                            {
                                @foreach (var option in Model.Sort.DataType)
                                {
                                    <div>
                                        <input type="checkbox" id="param3-@option" name="DataType" class="form-check-input" value="@option">
                                        <label for="param3-@option" class="form-check-label">@option</label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>Немає доступних варіантів для параметра 3.</p>
                            }
                        </div>
                    </div>
                    <div class="col-md-8 chart-container">
                        <h5>Графік</h5>
                        <canvas id="chart1"></canvas>
                    </div>
                </div>
            </div>
            <!-- Вкладка 2 -->
            <div class="tab-pane fade" id="tab2" role="tabpanel" aria-labelledby="tab2-tab">
                <div class="row">
                    <div class="col-md-4 sidebar">
                        <h5>Параметри</h5>
                        <button id="updateChart2" class="btn btn-primary mb-3">Перебудувати графік</button>
                        <div>
                            <label class="form-label mt-3">Параметр 1:</label>
                            @if (Model.Pathfinding.AlgorithmType?.Any() == true)
                            {
                                @foreach (var option in Model.Pathfinding.AlgorithmType)
                                {
                                    <div>
                                        <input type="checkbox" id="param3-@option" name="AlgorithmType" class="form-check-input" value="@option">
                                        <label for="param3-@option" class="form-check-label">@option</label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>Немає доступних варіантів для параметра 1.</p>
                            }
                        </div>
                    </div>
                    <div class="col-md-8 chart-container">
                        <h5>Графік</h5>
                        <canvas id="chart2"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Ініціалізація графіків
        const ctx1 = document.getElementById('chart1').getContext('2d');
        let chart1 = new Chart(ctx1, {
            type: 'line',
            data: {
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        labels: {
                            color: '#fff'
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: '#fff'
                        }
                    },
                    y: {
                        ticks: {
                            color: '#fff'
                        }
                    }
                }
            }
        });

        const ctx2 = document.getElementById('chart2').getContext('2d');
        let chart2 = new Chart(ctx2, {
            type: 'line',
            data: {
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        labels: {
                            color: '#fff'
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: '#fff'
                        }
                    },
                    y: {
                        ticks: {
                            color: '#fff'
                        }
                    }
                }
            }
        });


        document.getElementById('updateChart1').addEventListener('click', async () => {
            const selectedOptions = {
                AlgorithmType: [],
                CollectionType: [],
                DataType: []
            };

            // Збираємо вибрані значення з чекбоксів
            document.querySelectorAll('input[name="AlgorithmType"]:checked').forEach(checkbox => {
                selectedOptions.AlgorithmType.push(checkbox.value);
            });

            document.querySelectorAll('input[name="CollectionType"]:checked').forEach(checkbox => {
                selectedOptions.CollectionType.push(checkbox.value);
            });

            document.querySelectorAll('input[name="DataType"]:checked').forEach(checkbox => {
                selectedOptions.DataType.push(checkbox.value);
            });

            // Надсилаємо дані на сервер
            const response = await fetch('/Home/UpdateSortChart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // Для захисту від CSRF
                },
                body: JSON.stringify(selectedOptions)
            });

            // Перевіряємо відповідь
            if (response.ok) {
                const chartData = await response.json();

                // Оновлюємо графік з отриманими даними
                chart1.data.labels = chartData.labels; // labels тепер містять числові значення
                chart1.data.datasets = chartData.datasets.map(dataset => ({
                    label: dataset.label,
                    data: dataset.data.map(point => ({ x: point.x, y: point.y })), // Використовуємо координати x, y
                    borderColor: dataset.borderColor,
                    backgroundColor: dataset.backgroundColor,
                    fill: dataset.fill
                }));

                chart1.update();
            } else {
                console.error('Помилка при отриманні даних для графіка');
            }
        });


        // Оновлення графіка на другій вкладці
        document.getElementById('updateChart2').addEventListener('click', async () => {
            // Збираємо вибрані параметри (AlgorithmType)
            const selectedOptions = {
                AlgorithmType: []
            };

            document.querySelectorAll('input[name="AlgorithmType"]:checked').forEach(checkbox => {
                selectedOptions.AlgorithmType.push(checkbox.value);
            });

            // Надсилаємо дані на сервер
            const response = await fetch('/Home/UpdatePathfindingChart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // Для захисту від CSRF
                },
                body: JSON.stringify(selectedOptions)
            });

            // Перевіряємо відповідь
            if (response.ok) {
                const chartData = await response.json();

                // Оновлюємо графік з отриманими даними
                chart2.data.labels = chartData.labels; // labels тепер містять числові значення
                chart2.data.datasets = chartData.datasets.map(dataset => ({
                    label: dataset.label,
                    data: dataset.data.map(point => ({ x: point.x, y: point.y })), // Використовуємо координати x, y
                    borderColor: dataset.borderColor,
                    backgroundColor: dataset.backgroundColor,
                    fill: dataset.fill
                }));

                chart2.update();
            } else {
                console.error('Помилка при отриманні даних для графіка');
            }
        });


    </script>
</body>
</html>
